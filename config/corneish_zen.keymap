/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&kp LS(LEFT_ALT)>;
        };

        ht0: ht0 {
            compatible = "zmk,behavior-hold-tap";
            label = "HT0";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD1";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&kp LS(LEFT_GUI)>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <193>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <170>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <193>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <170>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
        };

        td2: td2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LS(LA(LC(LGUI)))>;
        };

        td3: td3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD3";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&kp LA(LC(LEFT_SHIFT))>;
        };

        td4: td4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD4";
            #binding-cells = <0>;
            bindings = <&kp RETURN>, <&kp APOS>;
        };

        td5: td5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD5";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp CAPS>;
        };

        td6: td6 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD6";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp RS(APOS)>, <&kp APOS>;
        };

        td7: td7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD7";
            #binding-cells = <0>;
            bindings = <&ht0 TAB ESC>, <&ht0 CAPS CAPS>;

            tapping-term-ms = <250>;
        };

        td8: td8 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD8";
            #binding-cells = <0>;
            bindings =
                <&ht0 RIGHT_CONTROL SEMI>,
                <&ht0 APOSTROPHE DOUBLE_QUOTES>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Layer_4 {
            bindings = <&mo 4>;
            key-positions = <40 41>;
        };

        command_control {
            bindings = <&kp LC(LEFT_GUI)>;
            key-positions = <12 0>;
        };

        option_control {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <0 1>;
        };

        browse_back {
            bindings = <&kp LG(LEFT_BRACKET)>;
            key-positions = <11 10>;
        };

        focus_next_win {
            bindings = <&kp LG(TILDE)>;
            key-positions = <7 8>;
            require-prior-idle-ms = <260>;
            timeout-ms = <30>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <7 6>;
            require-prior-idle-ms = <260>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <6 5>;
            require-prior-idle-ms = <260>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            require-prior-idle-ms = <260>;
        };

        question_mark {
            bindings = <&kp QUESTION>;
            key-positions = <28 27>;
            require-prior-idle-ms = <275>;
        };

        foward_slash {
            bindings = <&kp SLASH>;
            key-positions = <27 26>;
            require-prior-idle-ms = <275>;
        };

        move_file {
            bindings = <&kp LG(LA(V))>;
            key-positions = <6 5 7>;
        };

        l_option_l_command {
            bindings = <&kp LA(LEFT_GUI)>;
            key-positions = <11 12>;
        };

        l_control_l_option {
            bindings = <&kp LC(LEFT_ALT)>;
            key-positions = <11 10>;
        };

        l_control_l_gui {
            bindings = <&kp LC(LEFT_GUI)>;
            key-positions = <10 12>;
        };

        l_control_l_shift {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <10 13>;
        };

        l_option_l_shift {
            bindings = <&kp LA(LEFT_SHIFT)>;
            key-positions = <11 13>;
        };

        l_command_l_shift {
            bindings = <&kp LG(LEFT_SHIFT)>;
            key-positions = <13 12>;
        };

        l_ctrl_opt_cmnd {
            bindings = <&kp LC(LA(LEFT_GUI))>;
            key-positions = <31 20>;
        };

        l_ctrl_cmnd_shift {
            bindings = <&kp LC(LG(LEFT_SHIFT))>;
            key-positions = <10 31>;
        };

        l_option_cmnd_shift {
            bindings = <&kp LG(LA(LEFT_SHIFT))>;
            key-positions = <31 0>;
        };

        r_option_r_command {
            bindings = <&kp RA(RIGHT_GUI)>;
            key-positions = <18 17>;
        };

        r_control_r_option {
            bindings = <&kp RC(RIGHT_ALT)>;
            key-positions = <19 18>;
        };

        r_control_r_gui {
            bindings = <&kp RC(RIGHT_GUI)>;
            key-positions = <19 17>;
        };

        r_control_r_shift {
            bindings = <&kp RC(RIGHT_SHIFT)>;
            key-positions = <19 16>;
        };

        r_option_r_shift {
            bindings = <&kp RA(RIGHT_SHIFT)>;
            key-positions = <18 16>;
        };

        r_command_r_shift {
            bindings = <&kp RG(RIGHT_SHIFT)>;
            key-positions = <17 16>;
        };

        r_ctrl_option_cmnd {
            bindings = <&kp RC(RA(RIGHT_GUI))>;
            key-positions = <32 29>;
        };

        r_ctrl_cmnd_shift {
            bindings = <&kp RC(RG(RSHIFT))>;
            key-positions = <32 19>;
        };

        r_option_cmnd_shift {
            bindings = <&kp RA(RG(RSHIFT))>;
            key-positions = <32 9>;
        };

        meh {
            bindings = <&kp RC(RA(RSHIFT))>;
            key-positions = <32 33>;
        };

        screenshot {
            bindings = <&kp LG(LS(NUMBER_3))>;
            key-positions = <2 3 1>;
        };

        screenshot_select {
            bindings = <&kp LG(LS(NUMBER_4))>;
            key-positions = <4 3 2>;
        };

        undo {
            bindings = <&kp LG(Z)>;
            key-positions = <4 3 13 14>;
        };

        redo {
            bindings = <&kp LG(LS(Z))>;
            key-positions = <5 6 15 16>;
        };

        left {
            bindings = <&kp LEFT>;
            key-positions = <26 16>;
        };

        down {
            bindings = <&kp DOWN>;
            key-positions = <27 17>;
        };

        up {
            bindings = <&kp UP>;
            key-positions = <28 18>;
        };

        right {
            bindings = <&kp RIGHT>;
            key-positions = <29 19>;
        };

        force_quit {
            bindings = <&kp LG(LA(ESC))>;
            key-positions = <3 4 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            //╭────┬────┬────┬────┬────┬────╮   ╭────┬────┬────┬────┬────┬────╮
            //│TAB │ Q  │ W  │ E  │ R  │ T  │   │ Y  │ U  │ I  │ O  │ P  │BSPC│
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│GUI │ A  │ S  │ D  │ F  │ G  │   │ H  │ J  │ K  │ L  │ ;  │ '  │
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│ALT │ Z  │ X  │ C  │ V  │ B  │   │ N  │ M  │ ,  │ .  │ /  │ESC │
            //╰────┴────┴────┴────┴────┴────╯   ╰────┴────┴────┴────┴────┴────╯
            //               ╭────┬────┬────╮   ╭────┬────┬────╮
            //               │CTL │SPC │SFT │   │MO1 │MO2 │MO3 │
            //               ╰────┴────┴────╯   ╰────┴────┴────╯

            bindings = <
&td7  &kp Q                &kp W            &kp E            &kp R              &kp T                            &kp Y                                   &kp U               &kp I             &kp O             &kp P                     &kp BSPC
&td1  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_GUI D  &hml LEFT_SHIFT F  &kp G                            &kp H                                   &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL ENTER  &kp ENTER
&td0  &kp Z                &kp X            &kp C            &kp V              &kp B                            &kp N                                   &kp M               &kp COMMA         &kp DOT           &kp BACKSPACE             &kp BACKSPACE
                                            &mo 2            &kp SPACE          &ht0 LS(LA(LC(LEFT_GUI))) TAB    &ht0 LS(LA(LEFT_CONTROL)) LEFT_CONTROL  &mo 1               &mo 3
            >;
        };

        lower_layer {
            display-name = "NUMBER";

            //╭────┬────┬────┬────┬────┬────╮   ╭────┬────┬────┬────┬────┬────╮
            //│TAB │ 1  │ 2  │ 3  │ 4  │ 5  │   │ 6  │ 7  │ 8  │ 9  │ 0  │BSPC│
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│GUI │ A  │ S  │ D  │ F  │    │   │LFT │DWN │ UP │RIT │ [  │ ]  │
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│ALT │ VD │ VU │MUT │PLY │NXT │   │HOM │END │PGU │PGD │    │    │
            //╰────┴────┴────┴────┴────┴────╯   ╰────┴────┴────┴────┴────┴────╯
            //               ╭────┬────┬────╮   ╭────┬────┬────╮
            //               │CTL │SPC │SFT │   │ENT │RSE │ALT │
            //               ╰────┴────┴────╯   ╰────┴────┴────╯

            bindings = <
&trans  &kp N1            &kp N2            &kp N3            &kp N4            &kp N5        &kp N6    &kp N7    &kp N8       &kp N9         &kp N0            &kp BSPC
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(N5)    &kp LEFT  &kp DOWN  &kp UP       &kp RIGHT      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &kp LC(NUMBER_6)  &kp LC(N7)        &kp C_VOL_UP      &kp C_VOL_DN      &kp K_MUTE    &kp HOME  &kp END   &kp PAGE_UP  &kp PAGE_DOWN  &none             &none
                                            &trans            &trans            &trans        &kp INS   &kp DEL   &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            //╭────┬────┬────┬────┬────┬────╮   ╭────┬────┬────┬────┬────┬────╮
            //│TAB │ !  │ @  │ #  │ $  │ %  │   │ ^  │ &  │ *  │ (  │ )  │DEL │
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│GUI │C+1 │C+2 │C+3 │C+4 │C+5 │   │ -  │ =  │ [  │ ]  │ \  │ `  │
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│ALT │C+6 │C+7 │    │    │    │   │ _  │ +  │ {  │ }  │ |  │ `  │
            //╰────┴────┴────┴────┴────┴────╯   ╰────┴────┴────┴────┴────┴────╯
            //               ╭────┬────┬────╮   ╭────┬────┬────╮
            //               │GUI │LWR │SPC │   │ENT │RSE │ALT │
            //               ╰────┴────┴────╯   ╰────┴────┴────╯

            bindings = <
&trans  &kp EXCL           &kp AT             &kp HASH         &kp DLLR               &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DEL
&trans  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &none        &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &kp SINGLE_QUOTE   &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &none        &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                              &trans           &trans                 &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        layer_3 {
            display-name = "Fn";

            //╭────┬────┬────┬────┬────┬────╮   ╭────┬────┬────┬────┬────┬────╮
            //│ TAB│ F1 │ F2 │ F3 │ F4 │ F5 │   │ F6 │ F7 │ F8 │ F9 │ F10│ F11│
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│CTL │ A  │ S  │ D  │ F  │ G  │   │ H  │ J  │ K  │ L  │ ;  │ F12│
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│SFT │ Z  │ X  │ C  │ V  │ B  │   │ N  │ M  │ ,  │ .  │ /  │ESC │
            //╰────┴────┴────┴────┴────┴────╯   ╰────┴────┴────┴────┴────┴────╯
            //               ╭────┬────┬────╮   ╭────┬────┬────╮
            //               │GUI │LWR │SPC │   │ENT │RSE │ALT │
            //               ╰────┴────┴────╯   ╰────┴────┴────╯

            bindings = <
&trans  &kp F1        &kp F2        &kp F3  &kp F4      &kp F5         &kp F6          &kp F7  &kp F8  &kp F9  &kp F10          &kp F11
&trans  &trans        &trans        &trans  &sys_reset  &bootloader    &bootloader     &trans  &trans  &trans  &kp PRINTSCREEN  &kp F12
&trans  &out OUT_USB  &out OUT_BLE  &trans  &trans      &trans         &studio_unlock  &trans  &trans  &trans  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                    &trans  &trans      &trans         &trans          &trans  &trans
            >;
        };

        layer_4 {
            display-name = "BT_RGB";

            //╭────┬────┬────┬────┬────┬────╮   ╭────┬────┬────┬────┬────┬────╮
            //│ TAB│ Q  │ W  │PS3 │PS4 │ T  │   │ Y  │ U  │ I  │ O  │ P  │BSPC│
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│BTC │BTCA│BTS0│BTS1│BTS2│BTS3│   │ H  │ J  │ K  │ L  │ ;  │ '  │
            //├────┼────┼────┼────┼────┼────┤   ├────┼────┼────┼────┼────┼────┤
            //│SFT │RGOF│RGPN│    │    │RGEF│   │RGER│RGSP│RGB+│RGB-│ /  │ESC │
            //╰────┴────┴────┴────┴────┴────╯   ╰────┴────┴────┴────┴────┴────╯
            //               ╭────┬────┬────╮   ╭────┬────┬────╮
            //               │GUI │LWR │SPC │   │ENT │RSE │ALT │
            //               ╰────┴────┴────╯   ╰────┴────┴────╯

            bindings = <
&trans      &none            &none           &kp LS(LG(N3))  &kp LS(LG(NUMBER_4))  &none              &none            &none            &none            &none            &none     &kp BSPC
&bt BT_CLR  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2          &bt BT_SEL 3       &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans          &trans                &rgb_ug RGB_EFF    &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                             &trans          &trans                &trans             &kp INS          &kp DEL          &trans
            >;
        };
    };
};
